package Tower;
import java.util.ArrayList;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Map.java
//  @ Date : 2014.03.20.
//  @ Author : 
//
//




public class Map
{
	private int neighbourNumber;
	private long lastEnemyAddedTime;
	private long roundStartedTime;
	private ArrayList<Cell> cells;
	private Round round;
	private ArrayList<Enemy> enemies;
	private ArrayList<Obstacle> obstacles;
	private ArrayList<Tower> towers;
	private Saruman saruman;

	//Constructor
	public Map(int neighbour, long lastEnemy, long rt) 
	{
		this.neighbourNumber = neighbour;
		this.lastEnemyAddedTime = lastEnemy;
		this.roundStartedTime = rt;
		
		this.cells = new ArrayList<Cell>();
		this.enemies = new ArrayList<Enemy>();
		this.obstacles = new ArrayList<Obstacle>();
		this.towers = new ArrayList<Tower>();
		this.round = new Round(1,1,1,1,1,1);
	}

	//Getter
	public int getNeighbourNumber()
	{
		return this.neighbourNumber;
	}

	public long getLastEnemyAddedTime()
	{
		return this.lastEnemyAddedTime;
	}

	public long getRoundStartedTime()
	{
		return this.roundStartedTime;
	}

	public ArrayList<Cell> getCells()
	{
		return this.cells;
	}

	public ArrayList<Enemy> getEnemys()
	{
		return this.enemies;
	}

	public ArrayList<Tower> getTowers()
	{
		return this.towers;
	}

	public ArrayList<Obstacle> getObstacles()
	{
		return this.obstacles;
	}

	//Setter
	public void setNeighbourNumber(int neighbour)
	{
		this.neighbourNumber = neighbour;
	}

	public void setLastEnemyAddedTime(long lastEnemy)
	{
		this.lastEnemyAddedTime = lastEnemy;
	}

	public void setRoundStartedTime(long rt)
	{
		this.roundStartedTime = rt;
	}

	public void setCells(ArrayList<Cell> cell)
	{
		this.cells = cell;
	}

	public void setEnemies(ArrayList<Enemy> enemy)
	{
		this.enemies = enemy;
	}

	public void setTowers(ArrayList<Tower> tower)
	{
		this.towers = (ArrayList<Tower>) tower;
	}

	public void setObstacles(ArrayList<Obstacle> obstacle)
	{
		this.obstacles = obstacle;
	}
	
	public void setSaruman(Saruman s){
		this.saruman = s;
	}

	//Methods
	public void addEnemy(String type, Cell pos)
	{
		String logString = "Map.addEnemy(type, position)";
		Logger.Log(1, logString, this);
		Enemy enemy;
		
		if(type.equals("human")) {
			enemy = new Human(100, 5, 5, 30, 0);
			Logger.AddName(enemy, "HumanID");
		} else if(type.equals("elf")) {
			enemy = new Elf(100, 5, 5, 30, 0);
			Logger.AddName(enemy, "ElfID");
		} else if(type.equals("dwarf")) {
			enemy = new Dwarf(100, 5, 5, 30, 0);
			Logger.AddName(enemy, "DwarfID");
		} else { // it's a hobbit
			enemy = new Hobbit(100, 5, 5, 30, 0);
			Logger.AddName(enemy, "HobbitID");
		}

		enemy.setPosition(pos);
		enemies.add(enemy);
		Logger.Log(0, logString, this);
	}

	public void removeEnemy(Enemy enemy)
	{
		enemies.remove(enemy);
	}

	protected void addTower(Tower tower) {
		String logString = "Map.addTower(tower)";
		Logger.Log(1, logString, this);

		towers.add(tower);

		Logger.Log(0, logString, this);
	}

	protected void addObstacle(Obstacle obstacle) {
		String logString = "Map.addObstacle(obstacle)";
		Logger.Log(1, logString, this);

		obstacles.add(obstacle);

		Logger.Log(0, logString, this);
	}

	public ArrayList<Enemy> getEnemysInRange(Tower tower)
	{
		ArrayList<Enemy> enemy = new ArrayList<Enemy>();
		return enemy;
	}

	public void simulateWorld()
	{
		String logString = "Map.simulateWorld()";
		Logger.Log(1, logString, this);

		for(Enemy enemy: enemies) {
			enemy.tick();
		}
		Logger.Log(0, logString, this);
	}
}
