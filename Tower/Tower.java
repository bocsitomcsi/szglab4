package Tower;
import java.util.ArrayList;
import java.util.HashMap;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Tower.java
//  @ Date : 2014.03.20.
//  @ Author : 
//
//




/**
 * Torony.
 */
public class Tower extends Item
{
	/**
	 * Sebzesi ero.
	 */
	private int firePower;
	/**
	 * Egy loves utan ennyi idonek kell eltelnie, 
	 *  hogy a torony ujra lohessen.
	 */
	private int attackSpeed;
	/**
	 * Lotavolsag.
	 */
	private int range;
	/**
	 * Az egyes ellenseg tipusokra vonatkozo bonusz sebzesek.
	 */
	private HashMap<String, Integer> bonusPowers;
	/**
	 * Az az idopont amikor a torony legutoljara lott.
	 */
	private long lastTime;
	/**
	 * A palya referenciaja.
	 */
	private Map map;

	/**
	 * Konstruktor.
	 * @param power  Sebzesi ero.
	 * @param as  A torony lovesei kozott eltelt ido.
	 * @param r  Lotavolsag.
	 * @param lt  Az az idopont amikor a torony legutoljara lott.
	 * @param mm  A toronyra rakhato varazskovek maximalis szama.
	 * @param pos  A torony pozicioja.
	 * @param map  A palya.
	 */
	public Tower(int power, int as, int r, long lt, int mm, Cell pos, Map map)
	{
		super(mm, pos);
		this.firePower = power;
		this.attackSpeed = as;
		this.range = r;
		this.bonusPowers = new HashMap<String,Integer>();
		this.lastTime = lt;
		this.map = map;
	}
	
	/**
	 * Getter a firePower attributumra.
	 * @return  A firePower attributum.
	 */
	public int getFirePower()
	{
		return this.firePower;
	}

	/**
	 * Getter az attackSpeed attributumra.
	 * @return  Az attackSpeed attributum.
	 */
	public int getAttackSpeed()
	{
		return this.attackSpeed;
	}

	/**
	 * Getter a range attributumra.
	 * @return  A range attributum.
	 */
	public int getRange()
	{
		return this.range;
	}

	/**
	 * Getter a lastTime attributumra.
	 * @return  A lastTime attributum.
	 */
	public long getLastTime()
	{
		return this.lastTime;
	}

	/**
	 * Getter a bonusPowers attributumra.
	 * @return  A bonusPowers attributum.
	 */
	public HashMap<String,Integer> getBonusPowers()
	{
		return this.bonusPowers;
	}

	/**
	 * Setter a firePower attributumra.
	 * @param power  A firePower attributum kivant erteke.
	 */
	public void setFirePower(int power)
	{
		this.firePower = power;
	}

	/**
	 * Setter az attackSpeed attributumra.
	 * @param as  Az attackSpeed attributum kivant erteke.
	 */
	public void setAttackSpeed(int as)
	{
		this.attackSpeed = as;
	}

	/**
	 * Setter a range attributumra.
	 * @param r  A range attributum kivant erteke.
	 */
	public void setRange(int r)
	{
		this.range = r;
	}

	/**
	 * Setter a lastTime attributumra.
	 * @param lt  A lastTime attributum kivant erteke.
	 */
	public void setLastTime(long lt)
	{
		this.lastTime = lt;
	}

	/**
	 * Setter a bonusPowers attributumra.
	 * @param bonus  A bonusPowers attributum kivant erteke.
	 */
	public void setBonusPowers(HashMap<String,Integer> bonus)
	{
		this.bonusPowers = bonus;
	}
	
	/**
	 * Megvizsgalja, hogy a maxMagicStoneNumber attributum erteke kisebb-e
	 *  mint a magicStones lista hossza, es ha igen akkor a kapott varazsko
	 *  attributumait felhasznalva modositja a torony attributumait
	 *  es true-val ter vissza.
	 * Ellenkezo esetben false-szal ter vissza.
	 */
	public boolean upgrade(MagicStone stone)
	{
		String logString = "Tower.upgrade(stone)";
		Logger.Log(1, logString, this);
		
		Logger.Log(0, logString, this);
		return true;
	}
	
	public void shoot()
	{
	
	}
	
	public void tick()
	{
	
	}
}
