package Tower;

import java.util.Scanner;
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Saruman.java
//  @ Date : 2014.03.20.
//  @ Author : 
//
//




public class Saruman
{
	private int magicPower;
	private int towerCost;
	private int obstacleCost;
	private int magicStoneCost;
	private MagicStone selectedMagicStone;
	private Map map;

	//Constructors
	public Saruman(int mp, int tc, int oc, int mc, Map map)
	{
		this.magicPower = mp;
		this.towerCost = tc;
		this.obstacleCost = oc;
		this.magicStoneCost = mc;
		this.map = map;
	}

	//Getter
	public int getMagicPower()
	{
		return this.magicPower;
	}

	public int getTowerCost()
	{
		return this.towerCost;
	}

	public int getObstacleCost()
	{
		return this.obstacleCost;
	}

	public int getMagicStoneCost()
	{
		return this.magicStoneCost;
	}
	
	public MagicStone getSelectedMagicStone() {
		return this.selectedMagicStone;
	}

	//Setter
	public void setMagicPower(int mp)
	{
		String logString = "Saruman.setMagicPower(mp)";
		Logger.Log(1, logString, this);

		this.magicPower = mp;

		Logger.Log(0, logString, this);
	}

	public void setTowerCost(int tc)
	{
		this.towerCost = tc;
	}

	public void setObstacleCost(int sc)
	{
		this.obstacleCost = sc;
	}

	public void setMagicStoneCost(int mc)
	{
		this.magicStoneCost = mc;
	}

	public boolean createStone(String type)
	{
		String logString = "Saruman.createStone(type)";
		Logger.Log(1, logString, this);

		MagicStone stone;

		if(type.equals("purple")) {
			stone = new PurpleMagicStone("purple", 1, 1, 1, 1);
			Logger.AddName(stone, "PurpleStoneID");
		} else if(type.equals("cyan")) {
			stone = new CyanMagicStone("cyan", 1, 1, 1, 1);
			Logger.AddName(stone, "CyanStoneID");
		} else { //it's green
			stone = new GreenMagicStone("green", 1, 1, 1, 1);
			Logger.AddName(stone, "GreenStoneID");
		}
		this.selectedMagicStone = stone;
		Logger.Log(0, logString, this);

		return true;
	}

	public boolean addTower(Cell pos)
	{
		String logString = "Saruman.addTower(pos)";
		Logger.Log(1, logString, this);
		String answerText;
		Tower tower;
		boolean isUsable;
		Scanner scanner = new Scanner (System.in);

		while(true) {
			System.out.print("Lehet elhelyezni a cellara tornyot [igen, nem]: ");
			answerText = scanner.next();
			if(answerText.equals("igen")) {
				isUsable=true;
				break;
			} else if(answerText.equals("nem")) {
				isUsable=false;
				break;
			} else {
				System.out.println("Helytelen ertek");
				continue;
			}
		}

		if(isUsable) {
			tower = new Tower(1, 1, 1, 1, 1, pos, map);
			map.addTower(tower);
			this.changeMagicPowerBy(-1);
			Logger.Log(0, logString, this);

			return true;
		}
		Logger.Log(0, logString, this);

		return false;
	}

	public boolean addObstacle(Cell pos)
	{
		String logString = "Saruman.addObstacle(pos)";
		Logger.Log(1, logString, this);

		Obstacle obstacle;
		boolean isUsable;
		String answerText;
		Scanner scanner = new Scanner (System.in);

		while(true) {
			System.out.print("Lehet elhelyezni a cellara akadalyt [igen, nem]: ");
			answerText = scanner.next();
			if(answerText.equals("igen")) {
				isUsable=true;
				break;
			} else if(answerText.equals("nem")) {
				isUsable=false;
				break;
			} else {
				System.out.println("Helytelen ertek");
				continue;
			}
		}

		if(isUsable) {
			obstacle = new Obstacle(1, 1, pos);
			map.addObstacle(obstacle);
			this.changeMagicPowerBy(-1);
			Logger.Log(0, logString, this);

			return true;
		}
		Logger.Log(0, logString, this);

		return false;
	}

	public boolean upgradeItem(Item item)
	{
		String logString = "Saruman.upgradeItem(item)";
		Logger.Log(1, logString, this);
		
		item.upgrade(this.selectedMagicStone);
		
		Logger.Log(0, logString, this);
		return true;
	}

	public void changeMagicPowerBy(int power)
	{
		String logString = "Saruman.changeMagicPowerBy(power)";
		Logger.Log(1, logString, this);

		this.setMagicPower(4);

		Logger.Log(0, logString, this);
	}
}
